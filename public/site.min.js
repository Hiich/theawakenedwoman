/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./source/javascripts/site.js":
/*!************************************!*\
  !*** ./source/javascripts/site.js ***!
  \************************************/
/***/ (() => {

eval("$(window).scroll(function(){\n  let w = $(window).scrollTop();\n  let pixelsRow1 = parseInt(w) + parseInt(98);\n  let pixelsRow2 = parseInt(w) + parseInt(147);\n  $('#dicks-cards-row-1').css({'transform' : \"rotate(-6.85deg) translate3d(\"+pixelsRow1*0.1+\"px, 0px, 0px)\"});\n  $('#dicks-cards-row-2').css({'transform' : \"rotate(-6.85deg) translate3d(-\"+pixelsRow2*0.1+\"px, 0px, 0px)\"});\n});\n\n$(document).ready(function() {\n  notice = findGetParameter('notice');\n\n  if(notice == 'subscribed') {\n    $('#email-alert-form-notice').removeClass('hide');\n    $('#email-alert-form-inputs').addClass('hide');\n  }\n  else {\n    $('#email-alert-form-notice').addClass('hide');\n    $('#email-alert-form-inputs').removeClass('hide');\n  }\n\n  $(\"body\").on(\"click\", '.burger', function(event) {\n    $(this).toggleClass('active');\n    $('#mobile-menu-content').toggleClass('hide');\n  });\n\n  $(\"body\").on(\"click\", '#faq-list li.hided', function(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    $('#faq-list li').addClass('hided');\n    $(this).removeClass('hided');\n    $('#faq-list li .answer').removeClass('visible');\n    $('#faq-list li i.fa-minus').removeClass('fa-minus').addClass('fa-plus');\n\n    $(this).find('i.fa-plus').removeClass('fa-plus').addClass('fa-minus');\n    $(this).find('.answer').addClass('visible');\n  });\n\n  // ROADMAP\n  // define variables\n  var roadmapItems = document.querySelectorAll(\".timeline li\");\n\n  // check if an element is in viewport\n  // http://stackoverflow.com/questions/123999/how-to-tell-if-a-dom-element-is-visible-in-the-current-viewport\n  function isElementInViewport(el) {\n    var rect = el.getBoundingClientRect();\n    return (\n      rect.top >= 0 &&\n      rect.left >= 0 &&\n      rect.bottom <=\n        (window.innerHeight || document.documentElement.clientHeight) &&\n      rect.right <= (window.innerWidth || document.documentElement.clientWidth)\n    );\n  }\n\n  function roadmapCallbackFunc() {\n    for (var i = 0; i < roadmapItems.length; i++) {\n      if (isElementInViewport(roadmapItems[i])) {\n        roadmapItems[i].classList.add(\"in-view\");\n      }\n    }\n  }\n\n  // listen for events\n  window.addEventListener(\"load\", roadmapCallbackFunc);\n  window.addEventListener(\"resize\", roadmapCallbackFunc);\n  window.addEventListener(\"scroll\", roadmapCallbackFunc);\n});\n\nfunction findGetParameter(parameterName) {\n  var result = null, tmp = [];\n  location.search\n      .substr(1)\n      .split(\"&\")\n      .forEach(function (item) {\n        tmp = item.split(\"=\");\n        if (tmp[0] === parameterName) result = decodeURIComponent(tmp[1]);\n      });\n  return result;\n}\n\n\n//# sourceURL=webpack://minting-website-middleman/./source/javascripts/site.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./source/javascripts/site.js"]();
/******/ 	
/******/ })()
;